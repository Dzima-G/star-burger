services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      target: prod
    volumes:
      - ../frontend/bundles:/bundles
    command: sh -c "cp -r /app/frontend/bundles/* /bundles/"
    restart: "no"

  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ../db:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend-collectstatic:
    build:
      context: ../backend
      dockerfile: Dockerfile
      target: static
    env_file:
      - .env
    volumes:
      - ../frontend/bundles:/app/frontend/bundles
      - ../frontend/assets:/app/frontend/assets
      - ../static:/app/static
    command: sh -lc "python manage.py collectstatic --noinput"
    restart: "no"

  backend-migrate:
    build:
      context: ../backend
      dockerfile: Dockerfile
      target: migrate
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  web:
    build:
      context: ../backend
      dockerfile: Dockerfile
      target: web-prod
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ../media:/app/media:rw
      - ../static:/app/static:ro
    ports:
      - "127.0.0.1:8000:8000"
    command: >
      gunicorn star_burger.wsgi:application
      --bind 0.0.0.0:8000
    depends_on:
      - db
      - frontend
      - backend-collectstatic
      - backend-migrate

